<?xml version="1.0" encoding="UTF-8"?>
<project name="OotRandoCoop" default="build" basedir=".">

  <property name="project-name" value="${ant.project.name}"/>
  <property name="ini" value="./OotRandoCoop-config.ini"/>
  <property name="dist" value="./dist"/>
  <property name="bin" value="./bin"/>
  <property name="major" value="1"/>
  <property name="minor" value="1"/>
  <property name="emu" value="./src/for_emulator"/>
  <property name="release_type" value="DEV"/>
  <property name="build_temp" value="./build_temp"/>
   <buildnumber/>

  <condition property="cmd.exec" value="cmd" else="/bin/sh">
    <os family="windows"/>
  </condition>

  <condition property="cmd.con" value="/c" else="-c">
    <os family="windows"/>
  </condition>

  <target name="clean">
    <delete dir="${dist}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="./empty_folder"/>
  </target>

  <target name="build">
    <antcall target="GUI"/>
    <antcall target="zip"/>
  </target>

  <target name="setup">
    <echo message="Setting up env..."/>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="npm install -g electron"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="npm install -g asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="npm install -g electron-packager"/>
    </exec>
    <exec executable="cmd">
      <arg value="${cmd.con}"/>
      <arg value="npm install"/>
    </exec>
  </target>

  <target name="copy_files">
    <copy todir="${tfolder}/Lua">
      <fileset dir="./src/for_emulator/Lua" includes="**"/>
    </copy>
    <copy todir="${tfolder}">
      <fileset dir="./luasocket" includes="**"/>
    </copy>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ./plugins/OotOnline ${tfolder}/plugins/OotOnline.asar"/>
    </exec>
    <copy todir="${tfolder}/mods">
      <fileset dir="mods" includes="**"/>
    </copy>
    <copy todir="${tfolder}/rom">
      <fileset dir="rom" includes="**"/>
    </copy>
    <replace file="${tfolder}/Lua/OotModLoader.lua" propertyFile="build.properties">
      <replacefilter token="@major@" property="major"/>
      <replacefilter token="@minor@" property="minor"/>
      <replacefilter token="@buildNumber@" property="hotfix"/>
      <replacefilter token="@release_type@" value="${release_type}"/>
      <replacefilter token="@BUILD_TYPE@" value="CLI"/>
    </replace>
    <copy file="${build_temp}/OotModLoader.asar" tofile="${tfolder}/resources/OotModLoader.asar"/>
    <copy file="${build_temp}/updater.asar" tofile="${tfolder}/resources/updater.asar"/>
    <copy todir="${tfolder}">
      <fileset dir="./bizhawk_dist"/>
    </copy>
    <copy todir="${tfolder}/localization">
      <fileset dir="localization" includes="**"/>
    </copy>
    <copy todir="${tfolder}/versions">
      <fileset dir="versions" includes="**"/>
    </copy>
    <copy file="config.ini" tofile="${tfolder}/config.ini"/>
  </target>

  <target name="compile_scripts">
    <delete dir="${bin}"/>
    <mkdir dir="${bin}"/>
    <delete dir="${build_temp}"/>
    <mkdir dir="${build_temp}"/>
    <echo message="Compiling scripts..."/>
    <copy todir="${bin}/src">
      <fileset dir="./src"/>
    </copy>
    <copy todir="${bin}/node_modules">
      <fileset dir="./node_modules"/>
    </copy>
    <replace file="${bin}/src/OotModLoader.js" propertyFile="build.properties">
      <replacefilter token="@major@" property="major"/>
      <replacefilter token="@minor@" property="minor"/>
      <replacefilter token="@buildNumber@" property="hotfix"/>
      <replacefilter token="@release_type@" value="${release_type}"/>
      <replacefilter token="@BUILD_TYPE@" value="${type}"/>
    </replace>
    <replace file="${bin}/src/OotVersion.js" propertyFile="build.properties">
      <replacefilter token="@major@" property="major"/>
      <replacefilter token="@minor@" property="minor"/>
      <replacefilter token="@buildNumber@" property="hotfix"/>
      <replacefilter token="@release_type@" value="${release_type}"/>
      <replacefilter token="@BUILD_TYPE@" value="${type}"/>
    </replace>
    <replace file="${bin}/src/gui/index.html" propertyFile="build.properties">
      <replacefilter token="@major@" property="major"/>
      <replacefilter token="@minor@" property="minor"/>
      <replacefilter token="@release_type@" value="${release_type}"/>
      <replacefilter token="@buildNumber@" property="hotfix"/>
    </replace>
    <copy file="package.json" tofile="${bin}/package.json"/>
  </target>

  <target name="Node">
    <antcall target="compile_scripts">
      <param name="type" value="CLI"/>
    </antcall>
    <copy todir="${bin}/mods">
      <fileset dir="mods" includes="**"/>
    </copy>
    <copy todir="${bin}/rom">
      <fileset dir="rom" includes="**"/>
    </copy>
    <copy todir="${bin}/localization">
      <fileset dir="localization" includes="**"/>
    </copy>
    <copy todir="${bin}/versions">
      <fileset dir="versions" includes="**"/>
    </copy>
    <delete dir="${bin}/node_modules"/>
    <mkdir dir="${bin}/plugins"/>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ./plugins/OotOnline ${bin}/plugins/OotOnline.asar"/>
    </exec>
    <copy todir="${build_temp}">
      <fileset dir="${bin}" includes="**"/>
    </copy>
    <property file="build.properties"/>
    <zip destfile="${dist}/OotModLoader_${major}.${minor}.${hotfix}.${build.number}_${release_type}_Node_Universal.zip" basedir="${build_temp}"/>
  </target>

  <target name="CLI">
    <antcall target="compile_scripts">
      <param name="type" value="CLI"/>
    </antcall>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ./wrapper ${build_temp}/app.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ${bin} ${build_temp}/OotModLoader.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ./OotM_Updater ${build_temp}/updater.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="electron-packager ./empty_folder --all --out=${build_temp} --prebuilt-asar=${build_temp}/app.asar --electron-version=4.1.2 --icon 'OotOnline_Icon.ico'"/>
    </exec>
    <antcall target="copy_files">
      <param name="tfolder" value="${build_temp}/OotModLoader-win32-x64"/>
    </antcall>
    <antcall target="copy_files">
      <param name="tfolder" value="${build_temp}/OotModLoader-linux-x64"/>
    </antcall>
    <property file="build.properties"/>
    <delete dir="${build_temp}/OotModLoader-win32-x64/BizHawk"/>
    <delete dir="${build_temp}/OotModLoader-linux-x64/BizHawk"/>
    <zip destfile="${dist}/OotModLoader_${major}.${minor}.${hotfix}.${build.number}_${release_type}_Server_win64.zip" basedir="${build_temp}/OotModLoader-win32-x64"/>
    <zip destfile="${dist}/OotModLoader_${major}.${minor}.${hotfix}.${build.number}_${release_type}_Server_linux64.zip" basedir="${build_temp}/OotModLoader-linux-x64"/>
  </target>

  <target name="GUI">
    <antcall target="compile_scripts">
      <param name="type" value="GUI"/>
    </antcall>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ./wrapper ${build_temp}/app.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ${bin} ${build_temp}/OotModLoader.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ./OotM_Updater ${build_temp}/updater.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="electron-packager ./empty_folder --all --out=${build_temp} --prebuilt-asar=${build_temp}/app.asar --electron-version=4.1.2 --icon 'OotOnline_Icon.ico'"/>
    </exec>
    <antcall target="copy_files">
      <param name="tfolder" value="${build_temp}/OotModLoader-linux-x64"/>
    </antcall>
    <antcall target="copy_files">
      <param name="tfolder" value="${build_temp}/OotModLoader-win32-x64"/>
    </antcall>
    <property file="build.properties"/>
    <zip destfile="${dist}/OotModLoader_${major}.${minor}.${hotfix}.${build.number}_${release_type}_Client_win64.zip" basedir="${build_temp}/OotModLoader-win32-x64"/>
  </target>

  <target name="GUI_TEST">
    <antcall target="compile_scripts">
      <param name="type" value="GUI"/>
    </antcall>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ./wrapper ${build_temp}/app.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ${bin} ${build_temp}/OotModLoader.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="asar p ./OotM_Updater ${build_temp}/updater.asar"/>
    </exec>
    <exec executable="${cmd.exec}">
      <arg value="${cmd.con}"/>
      <arg value="electron-packager ./empty_folder --all --out=${build_temp} --prebuilt-asar=${build_temp}/app.asar --electron-version=4.1.2 --icon 'OotOnline_Icon.ico'"/>
    </exec>
    <antcall target="copy_files">
      <param name="tfolder" value="${build_temp}/OotModLoader-linux-x64"/>
    </antcall>
    <antcall target="copy_files">
      <param name="tfolder" value="${build_temp}/OotModLoader-win32-x64"/>
    </antcall>
  </target>

</project>